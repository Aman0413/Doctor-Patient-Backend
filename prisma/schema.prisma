// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  patients  Patient[] // One user can create multiple patients 
  doctors   Doctor[] // One user can create multiple doctors
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Patient {
  id        String    @id @default(uuid())
  name      String
  age       Int
  gender    String
  disease   String?
  userId    String // Foreign key
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  mappings  Mapping[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Doctor {
  id        String    @id @default(uuid())
  name      String
  specialty String
  userId    String // Foreign key
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  mappings  Mapping[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Mapping {
  id        String   @id @default(uuid())
  patientId String
  doctorId  String
  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor    Doctor   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}
